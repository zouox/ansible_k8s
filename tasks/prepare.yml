---
- name: Populate service facts
  ansible.builtin.service_facts:

- name: Set hosts hostnames
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"
    use: "{{ item.strategy }}"
  when:
    - item.test
    - set_hostnames
  loop:
    - test: ansible_os_family == "RedHat"
      strategy: systemd
    - test: ansible_os_family == "Debian"
      strategy: debian

- name: Set /etc/hosts to reflect hostnames
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "{{ hostvars[item].ansible_host }}\t{{ item }}"
  loop: "{{ groups.all }}" 

- name: Disable swap
  ansible.builtin.shell: |
    swapoff -a

- name: Disable swap in fstab
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: Disable firewalld
  ansible.builtin.systemd_service:
    name: firewalld
    enabled: false
    state: stopped
  when:
    - ansible_os_family == "RedHat"
    - ansible_facts.services['firewalld'] is defined

- name: Disable nm-cloud-setup service if applicable
  ansible.builtin.systemd_service:
    name: "{{ item }}"
    enabled: false
    state: stopped
  loop:
    - nm-cloud-setup.service
    - nm-cloud-setup.timer
  when:
    - ansible_facts.services['nm-cloud-setup'] is defined
    - ansible_facts.services['nm-cloud-setup'].state == 'running'

- name: Update repository cache
  ansible.builtin.apt:
    update_cache: yes
  when:
    - ansible_os_family == "Debian"

- name: Install dependencies for containerd
  ansible.builtin.package:
    name:
      - ca-certificates
      - curl
    state: present

- name: Create keyrings directory
  ansible.builtin.file:
    path: /etc/apt/keyrings
    owner: root
    group: root
    mode: '0755'
    state: directory
  when:
    - ansible_os_family == "Debian"

- name: Get Docker repository GPG key
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/debian/gpg
    dest: /etc/apt/keyrings/docker.asc
  when:
    - ansible_os_family == "Debian"

- name: Set read permissions on docker.asc
  ansible.builtin.file:
    path: /etc/apt/keyrings/docker.asc
    owner: root
    group: root
    mode: u+r,g+r,o+r
  when:
    - ansible_os_family == "Debian"

- name: Add Docker repository
  block:
    - name: Add docker repository (Debian)
      ansible.builtin.apt_repository:
        filename: docker-ce
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
        state: present
      when:
        - ansible_os_family == "Debian"
    - name: Add docker repository (RHEL)
      ansible.builtin.yum_repository:
        name: docker-ce
        description: Docker CE repository
        baseurl: https://download.docker.com/linux/centos/docker-ce.repo
      when:
        - ansible_os_family == "RedHat"

- name: Update repository cache
  ansible.builtin.apt:
    update_cache: yes
  when:
    - ansible_os_family == "Debian"

- name: Install containerd.io
  ansible.builtin.package:
    name: containerd.io
    state: present